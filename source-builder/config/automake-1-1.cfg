#
# Automake 1.xx Version 1.
#
# This configuration file configure's, make's and install's automake
#

%ifn %{defined _internal_autotools}
  %define _internal_autotools no
%endif

Name:      automake-%{automake_version}-%{_host}-%{release}
Summary:   Automake v%{automake_version} for host %{_host}
Version:   %{automake_version}
Release:   %{release}
URL: 	   http://www.gnu.org/software/automake/
BuildRoot: %{_tmppath}/%{name}-root-%(%{__id_u} -n)

#
# Source
#
Source0: ftp://ftp.gnu.org/gnu/automake/automake-%{automake_version}.tar.gz
VersionControl0: git clone git://git.savannah.gnu.org/automake.git

#
# Prepare the source code.
#
%prep
%setup -q -c -n %{name}-%{version}
cd automake-%{automake_version}
%{?patch0:%patch0 -p1}
cd ..

%build
  export PATH="%{_bindir}:${PATH}"

  cd automake-%{automake_version}

  if "%{_internal_autotools}" == "yes"; then
    am_prefix=$SB_TMPPREFIX
  else
    am_prefix=%{_prefix}
  fi

%if "%{_build}" != "%{_host}"
  CFLAGS_FOR_BUILD="-g -O2 -Wall" \
%endif
  CFLAGS="$SB_OPT_FLAGS" \
  ./configure \
    --build=%{_build} --host=%{_host} \
    --verbose \
    --prefix=${am_prefix}

  %{__make} %{?_smp_mflags} all

  cd ..

%install
  export PATH="%{_bindir}:${PATH}"
  rm -rf $SB_BUILD_ROOT

  cd automake-%{automake_version}

  if "%{_internal_autotools}" == "yes"; then
    %{__make} install
  else
    %{__make} DESTDIR=$SB_BUILD_ROOT install
  fi

  cd ..
